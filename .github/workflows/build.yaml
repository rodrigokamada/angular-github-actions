name: GitHub Pages
on:
  push:
    branches:
    - v3.6
  workflow_dispatch:
jobs:
  Builds :
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    environment: build
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Install dependencies
      run: |
           npm install -g @angular/cli
           mkdir user
           cd user
           ls -la
           npm i
           npm run build:prod
           ls -la
    - name: listings
      run: |
           ls -la
           cd dist
           ls -la
    - name: zipping
      uses: papeloto/action-zip@v1
      with:
          files: dist/user
          dest: user.zip
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: user
        path: user.zip
        
  deploy_to_dev:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    environment: Dev
    steps:
     - name: checkout
       uses: actions/checkout@v2
     - name: Download build
       uses: actions/download-artifact@v3
       with:
        name: user
     - name: Display structure of downloaded files
       run: ls -R
     - name: Deploy to Server
       uses: easingthemes/ssh-deploy@main
       env:
          SSH_PRIVATE_KEY: ${{ secrets.KEY }}
          SOURCE: "user.zip"
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}
          script: sh unzip.sh
  deploy_to_staging:
    runs-on: ubuntu-latest
    needs: deploy_to_dev
    if: github.event_name != 'pull_request'
    environment: Staging
    steps:
     - name: checkout
       uses: actions/checkout@v2
     - name: Download build
       uses: actions/download-artifact@v3
       with:
        name: user
     - name: Display structure of downloaded files
       run: ls -R
     - name: Deploy to Server
       uses: easingthemes/ssh-deploy@main
       env:
          SSH_PRIVATE_KEY: ${{ secrets.KEY }}
          SOURCE: "user.zip"
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.STAG_DIR }}
          script: sh unzip.sh
  
  
  
  deploy_to_prod:
    runs-on: ubuntu-latest
    needs: deploy_to_staging
    if: github.event_name != 'pull_request'
    environment: Prod
    steps:
     - name: checkout
       uses: actions/checkout@v2
     - name: Download build
       uses: actions/download-artifact@v3
       with:
        name: user
     - name: Display structure of downloaded files
       run: ls -R
     - name: Deploy to Server
       uses: easingthemes/ssh-deploy@main
       env:
          SSH_PRIVATE_KEY: ${{ secrets.KEY }}
          SOURCE: "user.zip"
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.PROD_DIR }}
          script: sh unzip.sh
